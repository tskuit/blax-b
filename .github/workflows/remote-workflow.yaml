name: Trigger build in blax-a repo.

on: [push]

##on:
##  push:
##    branches: 
##      - deployment

jobs:
  Trigger-remote-build:
    environment: dev
    runs-on: ubuntu-latest
    steps:
    - name: trigger-workflow-in-different-repo
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.ACCESS_TOKEN }}
        script: |
          const result = await github.rest.actions.createWorkflowDispatch({
            owner: 'tskuit',
            repo: 'blax-a',
            workflow_id: 'github-dispatch.yaml',
            ref: 'main',
            inputs: {
              branch: "${{ github.ref_name }}"
            },
          })

### marketplace 
### https://github.com/marketplace/actions/workflow-dispatch-and-wait


## branch: "${{ github.ref_name }}"
## env:
##  BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 
## github.ref_name string The short ref name of the branch or tag that triggered the workflow run. This value matches the branch or tag name shown on GitHub. For example, feature-branch-1.
## github.head_ref string The head_ref or source branch of the pull request in a workflow run. This property is only available when the event that triggers a workflow run is either pull_request or pull_request_target.


#        script: |
#          try {
#            const result = await github.rest.actions.createWorkflowDispatch({
#              owner: 'tskuit',
#              repo: 'blax-a',
#              workflow_id: 'github-dispatch.yaml',
#              ref: 'main'
#              inputs: {
#                tags: ${{ steps.get-tags.outputs.tags }}
#              },
#            })
#            console.log(result);
#          } catch(error) {
#            console.error(error);
#            core.setFailed(error);
#          }



##OK working
##jobs:
##  dispatch:
##    environment: dev
##    runs-on: ubuntu-latest
##    steps:
##    - name: trigger-workflow-in-different-repo
##      uses: actions/github-script@v6
##      with:
##        github-token: ${{ secrets.ACCESS_TOKEN }}
##        script: |
##          const result = await github.rest.actions.createWorkflowDispatch({
##            owner: 'tskuit',
##            repo: 'blax-a',
##            workflow_id: 'github-dispatch.yaml',
##            ref: 'main'
##          })
